services:
  db_pg:
    image: postgres:latest
    environment:
      POSTGRES_DB: myvet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 1m30s
      timeout: 30s
      retries: 3
      start_period: 30s
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  api:
    build:
      context: ./backend/myvet
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db_pg:
        condition: service_healthy  
    networks:
      - backend
    restart: unless-stopped
  
  admin_web:
    build:
      context: ./web_ui/admin_interface
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - node_modules:/web_app/node_modules
      - ./web_ui/admin_interface:/web_app
    networks:
      - frontend
    restart: unless-stopped

  proxy:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - frontend
      - backend
    restart: unless-stopped
    depends_on:
      - api
      - admin_web

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  pg_data:
    driver: local
  node_modules:
    driver: local